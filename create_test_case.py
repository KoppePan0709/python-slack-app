import datetime as dt


def create_test_case():
    time = dt.datetime(2020, 1, 2, 23, 50, 0)
    for _ in range(1000):
        time += dt.timedelta(days=0, seconds=10, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)
        time_str = time.strftime("%H:%M:%S.%f")
        print("{} {}".format(time_str[:-3], 10))


def create_test_case_v2():
    for h in range(0, 99):
        hour = str(h).zfill(2)
        for m in range(0, 60):
            minute = str(m).zfill(2)
            second = '00'
            with open('test_value.txt', 'a') as file:
                file.write("{}:{}:{}.000".format(hour, minute, second) + ' 10\n')

            # for s in range(0, 60):
                #second = str(s).zfill(2)


create_test_case_v2()


'''
テストケース1
10:00:00.000 0.0
11:00:00.000 20000.0
12:00:00.000 40000.0

expect: math.ceil((40000 + 20000 - 1052)/237) * 80 + 410 = 20330

テストケース2
21:00:00.000 0.0
22:00:00.000 20000.0
23:00:00.000 40000.0


expect: math.ceil((40000 * 1.25 + 20000 - 1052)/237) * 80 + 410 = 23690

テストケース3
10:00:00.000 0.0
10:10:00.000 900.0

10分で900m -> 時速5.4km = 低速運転
(10 * 60 - 90)　// 90 = 5 * 80 = 400
距離 900m <= 1052: = 初乗り料金 410
expect: 810

テストケース4
data数: 1080
10秒あたり10m = 時速3.6k => ずっと低速
22:00:00.000 10
22:00:10.000 10
...
25:59:50.000 10　

expect: 
22:00:00 - 25:59:50 夜間 => 14390 *  1.25 = 17987.5
distance_price = math.ceil((17987.5 - 1052)/237) * 80 + 410 = 6170
time_price = (14390 * 1.25 - 90)//90 * 80  = 15840
total = 5760 + 15840 = 21600

テストケース5
data数: 2160
10秒あたり10m = 時速3.6k => ずっと低速
20:00:00.000 10 
...
22:00:00.000 10
...
25:59:50.000 10　
expect: 30810

テストケース6 
00:00:00.000 ~ 98:59:00.000
深夜時間距離
00:00:00.000 ~ 04:59:00.000 = (60 * 5 - 1) * 10  = 2990
22:00:00.000 ~ 28:59:00.000 = (60 * 7) * 10  = 4200
46:00:00.000 ~ 52:59:00.000 = (60 * 7) * 10  = 4200
70:00:00.000 ~ 76:59:00.000 = (60 * 7) * 10  = 4200
94:00:00.000 ~ 98:59:00.000 = (60 * 5) * 10  = 3000
total = 18590 * 1.25 = 23237.5(深夜割増後)
低速運転時間
total = 1829 * 60 * 1.25 = 137175.0(深夜割増後)
日中距離
05:00:00.000 ~ 21:59:00.000 = (60 * 17) * 10 = 10200
29:00:00.000 ~ 45:59:00.000 = (60 * 17) * 10 = 10200
53:00:00.000 ~ 69:59:00.000 = (60 * 17) * 10 = 10200
77:00:00.000 ~ 93:59:00.000 = (60 * 17) * 10 = 10200
total = 40800
低速時間
total = 248880
price = math.ceil((23237.5 + 40800 - 1052)/237) * 80 + 410 + ( 137175 + 248880 - 90)//90 * 80


98:00:00.000 ~ 99:00:00.000
'''
